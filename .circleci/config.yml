version: 2.1

orbs:
  windows: circleci/windows@2.2.0

jobs:
  fmt:
    docker:
      - image: circleci/rust:latest

    steps:
      - checkout

      - run:
          name: "Check formatting"
          command: rustfmt --check **/**.rs


  build_linux:
    docker:
      - image: olback/rust-gtk-linux:latest

    steps:
      - checkout

      - restore_cache:
          name: Restore Linux Rust Cache
          key: cargo-cache-linux-v2-{{ checksum "Cargo.lock" }}-{{ checksum "Cargo.toml" }}

      - run:
          name: Use Stable as Default
          command: rustup default stable

      - run:
          name: Show Version
          command: |
                    rustc --version --verbose
                    rustup --version
                    cargo --version --verbose

      - run:
          name: Build Binary
          command: |
                    if [ $CIRCLE_BRANCH = "master" ]; then
                      cd ll-gui && cargo build --release --target=x86_64-unknown-linux-gnu && cd ..
                      cd ll-cli && cargo build --release --target=x86_64-unknown-linux-gnu && cd ..
                    else
                      cd ll-gui && cargo build --target=x86_64-unknown-linux-gnu && cd ..
                      cd ll-cli && cargo build --target=x86_64-unknown-linux-gnu && cd ..
                    fi

      - save_cache:
          name: Save Linux Rust Cache
          key: cargo-cache-linux-v2-{{ checksum "Cargo.lock" }}-{{ checksum "Cargo.toml" }}
          paths:
            - "~/.cargo/"
            - "~/.rustup/"
            - "./target/"

      - run:
          name: "Generate hash file"
          command: |
                    cd target/x86_64-unknown-linux-gnu/release
                    sha256sum library-loader-gui > library-loader-gui.sha256
                    sha256sum library-loader-cli > library-loader-cli.sha256

      - run:
          name: "Verify hash"
          command: |
                    cd target/x86_64-unknown-linux-gnu/release
                    sha256sum -c library-loader-gui.sha256
                    sha256sum -c library-loader-cli.sha256"

      - run:
          name: "Show hash"
          command: |
                    cd target/x86_64-unknown-linux-gnu/release
                    cat library-loader-gui.sha256
                    cat library-loader-cli.sha256

      - save_cache:
          name: Save Linux Build Cache
          key: ll-linux-dist-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - "./target/x86_64-unknown-linux-gnu/release/library-loader-gui"
            - "./target/x86_64-unknown-linux-gnu/release/library-loader-gui.sha256"
            - "./target/x86_64-unknown-linux-gnu/release/library-loader-cli"
            - "./target/x86_64-unknown-linux-gnu/release/library-loader-cli.sha256"

      - store_artifacts:
          name: Store GUI Build
          path: "./target/x86_64-unknown-linux-gnu/release/library-loader-gui"
          destination: "/linux/library-loader-gui"

      - store_artifacts:
          name: Store CLI Build
          path: "./target/x86_64-unknown-linux-gnu/release/library-loader-cli"
          destination: "/linux/library-loader-cli"


  build_windows:
    docker:
      - image: olback/rust-gtk-windows:latest

    environment:
      DIST: library-loader-windows-portable
      GTK_INSTALL_PATH: /usr/x86_64-w64-mingw32/sys-root/mingw

    steps:
      - checkout

      - restore_cache:
          name: Restore Windows Rust Cache
          key: cargo-cache-windows-v2-{{ checksum "Cargo.lock" }}-{{ checksum "Cargo.toml" }}

      - run:
          name: Use Stable as Default
          command: rustup default stable

      - run:
          name: Show Version
          command: |
                    rustc --version --verbose
                    rustup --version
                    cargo --version --verbose

      - run:
          name: Build Binary
          command: |
                    export RUST_BACKTRACE=full
                    export PKG_CONFIG_ALLOW_CROSS=1
                    if [ $CIRCLE_BRANCH = "master" ]; then
                      cargo build --release --target=x86_64-pc-windows-gnu
                    else
                      cargo build --target=x86_64-pc-windows-gnu
                    fi

      - save_cache:
          name: Save Windows Rust Cache
          key: cargo-cache-windows-v2-{{ checksum "Cargo.lock" }}-{{ checksum "Cargo.toml" }}
          paths:
            - "~/.cargo/"
            - "~/.rustup/"
            - "./target/"

      - run:
          name: Make dist package
          command: |
                    mkdir $DIST # Make dist dir
                    cp ./target/x86_64-pc-windows-gnu/release/library-loader.exe $DIST/library-loader.exe
                    ./tools/get_dlls.sh
                    ./tools/get_schemas.sh
                    ./tools/get_icons.sh
                    ./tools/get_theme.sh
                    ./tools/settings.sh
                    zip -r llwpu.zip $DIST

      - run:
          name: "Show hash"
          command: "sha256sum llwpu.zip"

      - save_cache:
          name: Save Windows Build
          key: ll-windows-pre-dist-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - "./llwpu.zip"

      # Upload artifact to make testing easier
      - store_artifacts:
          name: Upload dist as artifact
          path: "llwpu.zip"
          destination: "/llwpu.zip"


  sign_windows:
    executor:
      name: windows/default
    steps:
      - checkout

      - restore_cache:
          name: Restore Windows pre-dist cache
          key: ll-windows-pre-dist-{{ .Environment.CIRCLE_SHA1 }}

      - run:
          name: Get certificate (pfx)
          command: .\tools\get_pfx.ps1 -pfxpath library-loade.pfx

      - run:
          name: Unzip archive
          command: Expand-Archive -Path .\llwpu.zip -DestinationPath .

      - run:
          name: Sign library-loader.exe
          command: .\tools\sign.ps1 -binpath .\library-loader-windows-portable\library-loader.exe -pfxpath library-loader.pfx -password $env:pfxpass

      - run:
          name: Compress windows dist
          command: |
                    Compress-Archive .\library-loader-windows-portable\ library-loader-windows-portable.zip

      - save_cache:
          paths:
            - ./library-loader-windows-portable.zip
          key: ll-windows-dist-{{ .Environment.CIRCLE_SHA1 }}


  deploy:
    docker:
      - image: circleci/node:latest

    steps:
      - checkout

      - restore_cache:
          name: Restore Deploy Node Cache
          key: deploy-cache-{{ checksum ".circleci/deploy/package.json" }}-{{ checksum ".circleci/deploy/package-lock.json" }}

      - run:
          name: Install dependencies
          command: cd .circleci/deploy && npm install

      - save_cache:
          name: Save Node Cache
          key: deploy-cache-{{ checksum ".circleci/deploy/package.json" }}-{{ checksum ".circleci/deploy/package-lock.json" }}
          paths:
            - "./.circleci/deploy/node_modules"

      - restore_cache:
          name: Restore Linux Build
          key: ll-linux-dist-{{ .Environment.CIRCLE_SHA1 }}

      - restore_cache:
          name: Restore Windows Build
          key: ll-windows-dist-{{ .Environment.CIRCLE_SHA1 }}

      - store_artifacts:
          name: Store Linux Build
          path: "./target/x86_64-unknown-linux-gnu/release/library-loader"
          destination: "/linux/library-loader"

      - store_artifacts:
          name: Store Linux Build Checksum
          path: "./target/x86_64-unknown-linux-gnu/release/library-loader.sha256"
          destination: "/linux/library-loader.sha256"

      - store_artifacts:
          name: Store Windows Build
          path: "./library-loader-windows-portable.zip"
          destination: "/windows/library-loader-windows-portable.zip"

      - run:
          name: library-loader-windows-portable.zip checksum
          command: sha256sum library-loader-windows-portable.zip > library-loader-windows-portable.zip.sha256

      - store_artifacts:
          name: Store Build Checksum
          path: "./library-loader-windows-portable.zip.sha256"
          destination: "/windows/library-loader-windows-portable.zip.sha256"

      - run:
          name: Deploy
          command: node .circleci/deploy/deploy.js


workflows:
  version: 2
  build:
    jobs:
      # - fmt
      - build_linux
      - build_windows
      - sign_windows:
          requires:
            - build_windows
          filters:
            branches:
              only: master
      - request_deploy:
          type: approval
          requires:
            - build_linux
            - build_windows
            - sign_windows
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build_linux
            - build_windows
            - sign_windows
            - request_deploy
          filters:
            branches:
              only: master
