version: 2

jobs:
  fmt:
    docker:
      - image: circleci/rust:latest

    steps:
      - checkout

      - run:
          name: "Check formatting"
          command: rustfmt --check **/**.rs


  linux:
    docker:
      - image: olback/rust-gtk-linux:latest

    steps:
      - checkout

      - restore_cache:
          name: Restore Linux Rust Cache
          key: cargo-cache-linux-v2-{{ checksum "Cargo.lock" }}-{{ checksum "Cargo.toml" }}

      - run:
          name: Use Stable as Default
          command: rustup default stable

      - run:
          name: Show Version
          command: |
                    rustc --version --verbose
                    rustup --version
                    cargo --version --verbose

      - run:
          name: Build Binary
          command: cargo build --release --target=x86_64-unknown-linux-gnu

      - save_cache:
          name: Save Linux Rust Cache
          key: cargo-cache-linux-v2-{{ checksum "Cargo.lock" }}-{{ checksum "Cargo.toml" }}
          paths:
            - "~/.cargo/"
            - "~/.rustup/"
            - "./target/"

      - run:
          name: "Generate hash file"
          command: "cd target/x86_64-unknown-linux-gnu/release && sha256sum library-loader > library-loader.sha256"

      - run:
          name: "Verify hash"
          command: "cd target/x86_64-unknown-linux-gnu/release && sha256sum -c library-loader.sha256"

      - run:
          name: "Show hash"
          command: "cd target/x86_64-unknown-linux-gnu/release && cat library-loader.sha256"

      - save_cache:
          name: Save Linux Build Cache
          key: ll-linux-dist-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - "./target/x86_64-unknown-linux-gnu/release/library-loader"
            - "./target/x86_64-unknown-linux-gnu/release/library-loader.sha256"

    #   - store_artifacts:
    #       name: Store Build
    #       path: "./target/x86_64-unknown-linux-gnu/release/library-loader"
    #       destination: "/linux/library-loader"

    #   - store_artifacts:
    #       name: Store Build Checksum
    #       path: "./target/x86_64-unknown-linux-gnu/release/library-loader.sha256"
    #       destination: "/linux/library-loader.sha256"


  windows:
    docker:
      - image: olback/rust-gtk-windows:latest

    steps:
      - checkout

      - restore_cache:
          name: Restore Windows Rust Cache
          key: cargo-cache-windows-v2-{{ checksum "Cargo.lock" }}-{{ checksum "Cargo.toml" }}

      - run:
          name: Use Stable as Default
          command: rustup default stable

      - run:
          name: Show Version
          command: |
                    rustc --version --verbose
                    rustup --version
                    cargo --version --verbose

      - run:
          name: Build Binary
          command: RUST_BACKTRACE=full PKG_CONFIG_ALLOW_CROSS=1 cargo build --release --target=x86_64-pc-windows-gnu

      - save_cache:
          name: Save Windows Rust Cache
          key: cargo-cache-windows-v2-{{ checksum "Cargo.lock" }}-{{ checksum "Cargo.toml" }}
          paths:
            - "~/.cargo/"
            - "~/.rustup/"
            - "./target/"

      - run:
          name: "Generate hash file"
          command: "cd target/x86_64-pc-windows-gnu/release && sha256sum library-loader.exe > library-loader.exe.sha256"

      - run:
          name: "Verify hash"
          command: "cd target/x86_64-pc-windows-gnu/release && sha256sum -c library-loader.exe.sha256"

      - run:
          name: "Show hash"
          command: "cd target/x86_64-pc-windows-gnu/release && cat library-loader.exe.sha256"

      - save_cache:
          name: Save Windows Build
          key: ll-windows-dist-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - "./target/x86_64-pc-windows-gnu/release/library-loader.exe"
            - "./target/x86_64-pc-windows-gnu/release/library-loader.exe.sha256"

      - run:
          name: Make dist package
          command: ./tools/windows_dist.sh

      - store_artifacts:
          name: Store dist.zip
          path: "dist.zip"
          destination: "/windows/dist.zip"

    #   - store_artifacts:
    #       name: Store Build
    #       path: "./target/x86_64-pc-windows-gnu/release/library-loader.exe"
    #       destination: "/windows/library-loader.exe"

    #   - store_artifacts:
    #       name: Store Build Checksum
    #       path: "./target/x86_64-pc-windows-gnu/release/library-loader.exe.sha256"
    #       destination: "/windows/library-loader.exe.sha256"


  deploy:
    docker:
      - image: circleci/node:latest

    steps:
      - checkout

      - restore_cache:
          name: Restore Deploy Node Cache
          key: deploy-cache-{{ checksum ".circleci/deploy/package.json" }}-{{ checksum ".circleci/deploy/package-lock.json" }}

      - run:
          name: Install dependencies
          command: cd .circleci/deploy && npm install

      - save_cache:
          name: Save Node Cache
          key: deploy-cache-{{ checksum ".circleci/deploy/package.json" }}-{{ checksum ".circleci/deploy/package-lock.json" }}
          paths:
            - "./.circleci/deploy/node_modules"

      - restore_cache:
          name: Restore Linux Build
          key: ll-linux-dist-{{ .Environment.CIRCLE_SHA1 }}

      - restore_cache:
          name: Restore Windows Build
          key: ll-windows-dist-{{ .Environment.CIRCLE_SHA1 }}

      - store_artifacts:
          name: Store Build
          path: "./target/x86_64-unknown-linux-gnu/release/library-loader"
          destination: "/linux/library-loader"

      - store_artifacts:
          name: Store Build Checksum
          path: "./target/x86_64-unknown-linux-gnu/release/library-loader.sha256"
          destination: "/linux/library-loader.sha256"

      - store_artifacts:
          name: Store Build
          path: "./target/x86_64-pc-windows-gnu/release/library-loader.exe"
          destination: "/windows/library-loader.exe"

      - store_artifacts:
          name: Store Build Checksum
          path: "./target/x86_64-pc-windows-gnu/release/library-loader.exe.sha256"
          destination: "/windows/library-loader.exe.sha256"

      - run:
          name: Deploy
          command: node .circleci/deploy/deploy.js


workflows:
  version: 2
  build:
    jobs:
      - fmt
      - linux
      - windows
      - request_deploy:
          type: approval
          requires:
            - linux
            - windows
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - linux
            - windows
            - request_deploy
          filters:
            branches:
              only: master
